import { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import useAuthStore from "../../store/storeAuth";
import { AuthAPI } from "../../api/client";
import type { IApiResponse, IAuthLoginResponse } from "../../api/types";
import styles from "./Login.module.css";

const Login = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(false);

  const login = useAuthStore((state) => state.login);
  const navigate = useNavigate();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");
    setLoading(true);

    try {
      const response = await AuthAPI.login(email, password) as IApiResponse<IAuthLoginResponse>;

      if (response.success) {
        const { user, tokens } = response.data;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Zustand –∏ localStorage
        login(user, tokens.accessToken, tokens.refreshToken);
        localStorage.setItem("accessToken", tokens.accessToken);
        localStorage.setItem("refreshToken", tokens.refreshToken);

        // –†–µ–¥–∏—Ä–µ–∫—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if (user.role === "ADMIN") {
          navigate("/admin");
        } else if (user.role === "MODERATOR") {
          navigate("/moderator");
        } else {
          navigate("/");
        }
      } else {
        setError(response.error || "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞");
      }
    } catch (err) {
      setError(err instanceof Error ? err.message : "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className={styles.container}>
      <div className={styles.formCard}>
        <h1 className={styles.title}>üéÆ –í–•–û–î</h1>
        <p className={styles.subtitle}>QuestTab - –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–¥–∞—á</p>

        {error && <div className={styles.error}>‚ùå {error}</div>}

        <form onSubmit={handleSubmit} className={styles.form}>
          <div className={styles.inputGroup}>
            <label className={styles.label}>üìß EMAIL</label>
            <input
              type="email"
              className={styles.input}
              placeholder="your@email.com"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
            />
          </div>

          <div className={styles.inputGroup}>
            <label className={styles.label}>üîí –ü–ê–†–û–õ–¨</label>
            <input
              type="password"
              className={styles.input}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
          </div>

          <button
            type="submit"
            className={styles.submitButton}
            disabled={loading}
          >
            {loading ? "‚è≥ –í—Ö–æ–¥..." : "üöÄ –í–û–ô–¢–ò"}
          </button>
        </form>

        <div className={styles.switchLink}>
          –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{" "}
          <Link to="/register">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Link>
        </div>

        <div className={styles.switchLink} style={{ marginTop: '10px', fontSize: '12px' }}>
          –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:<br />
          üë§ user@example.com / password123<br />
          üëë admin@example.com / admin123
        </div>
      </div>
    </div>
  );
};

export default Login;

