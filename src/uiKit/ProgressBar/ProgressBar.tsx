import React from "react";
import styles from "./ProgressBar.module.css";
import useTaskExpiry from "../../hooks/useTaskExpiry";

interface ProgressBarProps {
  expiredDate: Date | null;
}

const ProgressBar: React.FC<ProgressBarProps> = ({ expiredDate }) => {
  const expiryInfo = useTaskExpiry(expiredDate);

  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞—Ä (–∑–∞–¥–∞—á–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–∏—Ç—å—Å—è)
  if (!expiredDate || !expiryInfo) {
    return null;
  }

  // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  let progressPercentage: number;
  
  if (expiryInfo.isExpired) {
    // –ï—Å–ª–∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 100% (–ø–æ–ª–Ω—ã–π –±–∞—Ä)
    progressPercentage = 100;
  } else {
    // –ï—Å–ª–∏ –≤—Ä–µ–º—è –µ—Å—Ç—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
    // –ë–µ—Ä–µ–º –º–∞–∫—Å–∏–º—É–º 7 –¥–Ω–µ–π –∫–∞–∫ 100%
    const maxDays = 7;
    const maxTime = maxDays * 24 * 60 * 60 * 1000; // 7 –¥–Ω–µ–π –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    progressPercentage = Math.max(0, Math.min(100, (expiryInfo.timeLeft / maxTime) * 100));
  }

  return (
    <div className={styles.progressBarContainer}>
      <div className={styles.startIcon}>üõ°Ô∏è</div>
      <div className={styles.progressTrack}>
        <div 
          className={`${styles.progressFill} ${expiryInfo.isExpired ? styles.expired : styles.active}`}
          style={{ width: `${progressPercentage}%` }}
        />
        <div className={styles.progressPercentage}>
          {Math.round(progressPercentage)}%
        </div>
      </div>
      <div className={styles.endIcon}>üíÄ</div>
    </div>
  );
};

export default ProgressBar;
