import { create } from "zustand";
import { DifficultyStatus } from "../Consts/status";

export interface ITasks {
  id: string;
  title: string;
  description?: string;
  status?: DifficultyStatus;
  dateCreate: Date;
  expiredDate: Date | null;
  boardId: number; // 0 = All Tasks, 1-4 = –¥—Ä—É–≥–∏–µ –¥–æ—Å–∫–∏
  reward: {
    gold: number;
    exp: number;
  };
}

export interface ITasksStore {
  tasks: ITasks[];
  createTask: (task: ITasks) => void;
  deleteTask: (id: string) => void;
  moveTask: (taskId: string, newBoardId: number) => void;
  checkExpiredTasks: () => void;
}

const useTasksStore = create<ITasksStore>((set) => ({
  tasks: [
    // –ó–∞–¥–∞—á–∞ –±–µ–∑ –¥–µ–¥–ª–∞–π–Ω–∞ (–ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è)
    {
      id: "1",
      title: "–ò–∑—É—á–∏—Ç—å React",
      description: "–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã React –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã",
      status: "easy",
      boardId: 0,
      reward: { gold: 100, exp: 50 },
      dateCreate: new Date(),
      expiredDate: null,
    },
    // –ó–∞–¥–∞—á–∞ —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º –¥–µ–¥–ª–∞–π–Ω–æ–º (100% –∫—Ä–∞—Å–Ω—ã–π –±–∞—Ä)
    {
      id: "2",
      title: "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞",
      description: "–≠—Ç–∞ –∑–∞–¥–∞—á–∞ —É–∂–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ - –∫—Ä–∞—Å–Ω—ã–π –±–∞—Ä 100%",
      status: "medium",
      boardId: 0,
      reward: { gold: 200, exp: 100 },
      dateCreate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 –¥–Ω—è –Ω–∞–∑–∞–¥
      expiredDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥
    },
    // –ó–∞–¥–∞—á–∞ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —á–µ—Ä–µ–∑ 6 –¥–Ω–µ–π (85% –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä)
    {
      id: "3",
      title: "–ó–∞–¥–∞—á–∞ –Ω–∞ 6 –¥–Ω–µ–π",
      description: "–î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ 6 –¥–Ω–µ–π - –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä 85%",
      status: "easy",
      boardId: 0,
      reward: { gold: 150, exp: 75 },
      dateCreate: new Date(),
      expiredDate: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000), // +6 –¥–Ω–µ–π
    },
    // –ó–∞–¥–∞—á–∞ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —á–µ—Ä–µ–∑ 3 –¥–Ω—è (43% –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä)
    {
      id: "4",
      title: "–ó–∞–¥–∞—á–∞ –Ω–∞ 3 –¥–Ω—è",
      description: "–î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ 3 –¥–Ω—è - –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä 43%",
      status: "medium",
      boardId: 0,
      reward: { gold: 300, exp: 150 },
      dateCreate: new Date(),
      expiredDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000), // +3 –¥–Ω—è
    },
    // –ó–∞–¥–∞—á–∞ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —á–µ—Ä–µ–∑ 1 –¥–µ–Ω—å (14% –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä)
    {
      id: "5",
      title: "–°—Ä–æ—á–Ω–∞—è –∑–∞–¥–∞—á–∞",
      description: "–î–µ–¥–ª–∞–π–Ω –∑–∞–≤—Ç—Ä–∞ - –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä 14%",
      status: "hard",
      boardId: 0,
      reward: { gold: 400, exp: 200 },
      dateCreate: new Date(),
      expiredDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000), // +1 –¥–µ–Ω—å
    },
    // –ó–∞–¥–∞—á–∞ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤ (7% –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä)
    {
      id: "6",
      title: "–û—á–µ–Ω—å —Å—Ä–æ—á–Ω–∞—è –∑–∞–¥–∞—á–∞",
      description: "–î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤ - –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä 7%",
      status: "epic",
      boardId: 0,
      reward: { gold: 600, exp: 400 },
      dateCreate: new Date(),
      expiredDate: new Date(Date.now() + 12 * 60 * 60 * 1000), // +12 —á–∞—Å–æ–≤
    },
    // –ó–∞–¥–∞—á–∞ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ (1% –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä)
    {
      id: "7",
      title: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞",
      description: "–î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ - –∑–µ–ª–µ–Ω—ã–π –±–∞—Ä 1%",
      status: "epic",
      boardId: 0,
      reward: { gold: 800, exp: 500 },
      dateCreate: new Date(),
      expiredDate: new Date(Date.now() + 2 * 60 * 60 * 1000), // +2 —á–∞—Å–∞
    },
        // –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤ victory –¥–æ—Å–∫–µ (–∑–æ–ª–æ—Ç–∞—è –∫–æ—Ä–æ–Ω–∞)
        {
          id: "8",
          title: "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞",
          description: "–≠—Ç–∞ –∑–∞–¥–∞—á–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ - –∑–æ–ª–æ—Ç–∞—è –∫–æ—Ä–æ–Ω–∞ üëë",
          status: "completed",
          boardId: 3,
          reward: { gold: 1000, exp: 600 },
          dateCreate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3 –¥–Ω—è –Ω–∞–∑–∞–¥
          expiredDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000), // +1 –¥–µ–Ω—å
        },
        // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è Start –¥–æ—Å–∫–∏ (ID: 1)
        {
          id: "9",
          title: "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞",
          description: "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ –¥–æ—Å–∫–µ Start",
          status: "easy",
          boardId: 1,
          reward: { gold: 100, exp: 50 },
          dateCreate: new Date(),
          expiredDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // +7 –¥–Ω–µ–π
        },
        {
          id: "10",
          title: "–ï—â–µ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞",
          description: "–í—Ç–æ—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ –¥–æ—Å–∫–µ Start",
          status: "medium",
          boardId: 1,
          reward: { gold: 200, exp: 100 },
          dateCreate: new Date(),
          expiredDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // +5 –¥–Ω–µ–π
        },
        // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è In Progress –¥–æ—Å–∫–∏ (ID: 2)
        {
          id: "11",
          title: "–ó–∞–¥–∞—á–∞ –≤ —Ä–∞–±–æ—Ç–µ",
          description: "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ –¥–æ—Å–∫–µ In Progress",
          status: "hard",
          boardId: 2,
          reward: { gold: 300, exp: 150 },
          dateCreate: new Date(),
          expiredDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000), // +3 –¥–Ω—è
        },
        {
          id: "12",
          title: "–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞–¥–∞—á–∞",
          description: "–í—Ç–æ—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ –¥–æ—Å–∫–µ In Progress",
          status: "epic",
          boardId: 2,
          reward: { gold: 400, exp: 200 },
          dateCreate: new Date(),
          expiredDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // +2 –¥–Ω—è
        },
  ],
  createTask: (task: ITasks) =>
    set((state) => ({ tasks: [...state.tasks, task] })),
  deleteTask: (id: string) =>
    set((state) => ({ tasks: state.tasks.filter((task) => task.id !== id) })),
  moveTask: (taskId, newBoardId) => {
    set((state) => {
      const updatedTasks = state.tasks.map((task) => {
        if (task.id === taskId) {
          // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ defeat (ID: 4), –æ–±–Ω—É–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã
          if (newBoardId === 4) {
            return { 
              ...task, 
              boardId: newBoardId,
              reward: { gold: 0, exp: 0 }
            };
          }
          return { ...task, boardId: newBoardId };
        }
        return task;
      });
      return { tasks: updatedTasks };
    });
  },
  checkExpiredTasks: () => {
    set((state) => {
      const now = new Date();
      const updatedTasks = state.tasks.map((task) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –ª–∏ –∑–∞–¥–∞—á–∞ –∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —É–∂–µ –≤ defeat
        if (task.expiredDate && 
            task.expiredDate <= now && 
            task.boardId !== 4) {
          return {
            ...task,
            boardId: 4, // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ defeat
            reward: { gold: 0, exp: 0 } // –û–±–Ω—É–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã
          };
        }
        return task;
      });
      return { tasks: updatedTasks };
    });
  },
}));

export default useTasksStore;
