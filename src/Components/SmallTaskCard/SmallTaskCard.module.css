@import url('./../../designToken/designToken.css');

.smallTaskCardContainer {
    width: 100%;
    min-height: 120px;
    border-radius: 8px;
    background-color: var(--color-wood-500);
    border: 3px solid var(--color-wood-700);
    margin: 8px 0;
    display: flex;
    flex-direction: column;
    padding: 12px;
    gap: 8px;
}

.draggableContent {
    flex: 1;
    cursor: grab;
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.draggableContent:active {
    cursor: grabbing;
}


.smallTaskCardHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 8px;
}

.dateBadgesRow {
    display: flex;
    flex-direction: column;
    gap: 4px;
    align-items: stretch;
    width: 100%;
}

.taskTitle {
    margin: 0;
    font-size: 14px;
    font-weight: bold;
    color: var(--color-wood-800);
    word-wrap: break-word;
    flex: 1;
    line-height: 1.3;
}

.smallTaskCardRewardBlock {
    display: flex;
    justify-content: space-between;
    gap: 8px;
}

.rewardItem {
    display: flex;
    align-items: center;
    gap: 4px;
    background-color: var(--color-wood-600);
    padding: 4px 8px;
    border-radius: 4px;
    border: 1px solid var(--color-wood-700);
}

.rewardIcon {
    font-size: 12px;
}

.rewardValue {
    font-size: 12px;
    font-weight: bold;
    color: var(--color-accent-gold);
}

.expValue {
    font-size: 12px;
    font-weight: bold;
    color: var(--color-mystic-600);
}

.smallTaskCardActions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 8px;
    width: 100%;
}


.smallTaskCardContainer:hover {
  cursor: grab;
  border-color: var(--color-wood-500);
  background-color: var(--color-wood-200);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  transition: all 0.2s ease;
}

.smallTaskCardContainer:active {
  cursor: grabbing;
  transform: scale(1.02);
  transition: transform 0.2s ease;
}

.cardDeleteButton {
  background: inherit;
  border: none;
  cursor: pointer;
  font-size: 14px;
  padding: 4px;
  border-radius: 3px;
  transition: background-color 0.2s ease;
}

.cardDeleteButton:hover {
  background-color: var(--color-wood-300);
}

/* –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ defeat */
.smallTaskCardContainer.defeat {
    background-color: var(--color-wood-700);
    border-color: var(--color-wood-800);
    filter: grayscale(0.3) brightness(0.8);
    transform: rotate(-1deg);
    box-shadow: 0 2px 8px rgba(139, 69, 19, 0.3);
    position: relative;
    overflow: visible;
}

.smallTaskCardContainer.defeat::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background-color: rgba(139, 69, 19, 0.1);
    border-radius: 15px;
    z-index: -1;
    animation: damageGlow 3s ease-in-out infinite;
}

.smallTaskCardContainer.defeat::after {
    content: 'üíÄ';
    position: absolute;
    top: -8px;
    right: -8px;
    font-size: 16px;
    background: var(--color-wood-800);
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid var(--color-wood-600);
    animation: skullFloat 2s ease-in-out infinite;
}

.smallTaskCardContainer.defeat .smallTaskCardHeader {
    text-decoration: line-through;
}

.smallTaskCardContainer.defeat .taskTitle {
    color: var(--color-wood-400);
    opacity: 0.7;
    text-decoration: line-through;
}

.smallTaskCardContainer.defeat .smallTaskCardRewardBlock {
    background-color: var(--color-wood-600);
    border-color: var(--color-wood-700);
    opacity: 0.8;
}

.smallTaskCardContainer.defeat .rewardValue {
    color: var(--color-wood-300);
    text-decoration: line-through;
}

.smallTaskCardContainer.defeat .expValue {
    color: var(--color-mystic-300);
    text-decoration: line-through;
}

.smallTaskCardContainer.defeat .cardDeleteButton {
    background-color: var(--color-wood-600);
    color: var(--color-wood-300);
}

@keyframes damageGlow {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.6; }
}

@keyframes skullFloat {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-3px) rotate(3deg); }
}

/* –ü–æ–±–µ–¥–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ victory */
.smallTaskCardContainer.victory {
    background-color: var(--color-wood-300);
    border-color: var(--color-wood-400);
    filter: brightness(1.1) saturate(1.2);
    transform: rotate(0.5deg);
    box-shadow: 0 4px 16px rgba(255, 215, 0, 0.3);
    position: relative;
    overflow: visible;
}

.smallTaskCardContainer.victory::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background-color: rgba(255, 215, 0, 0.1);
    border-radius: 15px;
    z-index: -1;
    animation: victoryGlow 3s ease-in-out infinite;
}

.smallTaskCardContainer.victory::after {
    content: 'üëë';
    position: absolute;
    top: -10px;
    right: -10px;
    font-size: 20px;
    background-color: #FFD700;
    border-radius: 50%;
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid var(--color-wood-400);
    animation: crownFloat 2s ease-in-out infinite;
    box-shadow: 0 3px 6px rgba(255, 215, 0, 0.4);
}

.smallTaskCardContainer.victory .smallTaskCardHeader {
}

.smallTaskCardContainer.victory .taskTitle {
    color: var(--color-wood-800);
    text-shadow: 1px 1px 2px rgba(255, 215, 0, 0.3);
    font-weight: 900;
}

.smallTaskCardContainer.victory .smallTaskCardRewardBlock {
    background-color: var(--color-wood-100);
    border-color: var(--color-wood-300);
    box-shadow: inset 0 1px 2px rgba(255, 215, 0, 0.1);
}

.smallTaskCardContainer.victory .rewardValue {
    color: var(--color-wood-700);
    font-weight: 900;
}

.smallTaskCardContainer.victory .expValue {
    color: var(--color-mystic-700);
    font-weight: 900;
}

.smallTaskCardContainer.victory .cardDeleteButton {
    background-color: var(--color-wood-200);
    color: var(--color-wood-700);
}

.smallTaskCardContainer.victory .cardDeleteButton:hover {
    background-color: var(--color-wood-300);
    transform: scale(1.1);
}

@keyframes victoryGlow {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.7; }
}

@keyframes crownFloat {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-6px) rotate(-3deg); }
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –¥–æ—Å–∫–∏ Start (1) - –∫–æ–ø–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É victory –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ */
.smallTaskCardContainer.start {
    filter: brightness(1.05) saturate(1.1);
    transform: rotate(0.2deg);
    box-shadow: 0 4px 16px rgba(107, 142, 107, 0.2);
    position: relative;
    overflow: visible;
}

.smallTaskCardContainer.start::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background-color: rgba(107, 142, 107, 0.1);
    border-radius: 15px;
    z-index: -1;
    animation: startGlow 3s ease-in-out infinite;
}

.smallTaskCardContainer.start::after {
    content: 'üéØ';
    position: absolute;
    top: -10px;
    right: -10px;
    font-size: 20px;
    background-color: #6B8E6B;
    border-radius: 50%;
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: startFloat 3s ease-in-out infinite;
    box-shadow: 0 2px 8px rgba(107, 142, 107, 0.3);
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –¥–æ—Å–∫–∏ In Progress (2) - –∫–æ–ø–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É victory –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ */
.smallTaskCardContainer.progress {
    filter: brightness(1.05) saturate(1.1);
    transform: rotate(-0.2deg);
    box-shadow: 0 4px 16px rgba(184, 134, 11, 0.2);
    position: relative;
    overflow: visible;
}

.smallTaskCardContainer.progress::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background-color: rgba(184, 134, 11, 0.1);
    border-radius: 15px;
    z-index: -1;
    animation: progressGlow 3s ease-in-out infinite;
}

.smallTaskCardContainer.progress::after {
    content: '‚öîÔ∏è';
    position: absolute;
    top: -10px;
    right: -10px;
    font-size: 20px;
    background-color: #B8860B;
    border-radius: 50%;
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: progressFloat 3s ease-in-out infinite;
    box-shadow: 0 2px 8px rgba(184, 134, 11, 0.3);
}

@keyframes startGlow {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

@keyframes startFloat {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-6px) rotate(3deg); }
}

@keyframes progressGlow {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

@keyframes progressFloat {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-6px) rotate(-3deg); }
}